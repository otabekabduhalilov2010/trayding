import React, { useEffect, useState } from 'react';
import AOS from 'aos';
import 'aos/dist/aos.css';
import s from './Section5.module.scss';

const Section5 = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [formData, setFormData] = useState({
    phone: '',
    name: '',
    email: '',
  });

  const BOT_TOKEN = "7556415457:AAG_o-ULD3NptvbBxYasq5mgjK5K2EKgowg"; 
  const CHAT_ID = "6059580218"; 

  useEffect(() => {
    AOS.init({
      duration: 1000,
      once: false,
      mirror: true,
      easing: 'ease-in-out',
    });
  }, []);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const message = `
      üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:
      üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
      üë§ –ò–º—è: ${formData.name}
      üìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: ${formData.email}
    `;

    try {
      await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text: message,
          parse_mode: "HTML",
        }),
      });

      alert("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
      setFormData({ phone: '', name: '', email: '' });
      setIsModalOpen(false);
    } catch (error) {
      alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏!");
    }
  };

  return (
    <>
      <section className={s.section}>
        <div className="container">
          <div className={s.wrap}>
            <div 
              className={s.imageWrapper}
              data-aos="zoom-in-right"
              data-aos-duration="1200"
              data-aos-delay="200"
            >
              <img 
                className={s.planshed} 
                src="./Planshed.png" 
                alt=""
              />
            </div>
            <div className={s.title}>
              <h1 
                data-aos="fade-left"
                data-aos-duration="1200"
                data-aos-delay="400"
              >
                –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ <br /> –ø—Ä–æ–±–Ω—ã–π <br /> –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤
              </h1>
              <p 
                data-aos="fade-up"
                data-aos-delay="600"
                className={s.description}
              >
                –í—ã–±–µ—Ä–∏ —É—Å–ø–µ—à–Ω—É—é —Ç–æ—Ä–≥–æ–≤—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –≤–º–µ—Å—Ç–µ —Å –ò–≥–æ—Ä–µ–º –¢–æ—â–∞–∫–æ–≤—ã–º
              </p>
              <p 
                data-aos="fade-up"
                data-aos-delay="700"
                className={s.level}
              >
                –£—Ä–æ–≤–µ–Ω—å - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª
              </p>
              <div 
                className={s.suma}
                data-aos="flip-up"
                data-aos-delay="800"
              >
                <s className={s.oldPrice}>12900 —Ä—É–±</s>
                <b className={s.newPrice}>7500 —Ä—É–±.</b>
              </div>
              <button 
                className={s.mainButton}
                data-aos="zoom-in"
                data-aos-delay="900"
                onClick={() => setIsModalOpen(true)}
              >
                –ü—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ <img src="./clik.png" alt="" className={s.buttonIcon} />
              </button>
              <p 
                className={s.terms}
                data-aos="fade-up"
                data-aos-delay="1000"
              >
                –ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É, —è —Å–æ–≥–ª–∞—à–∞—é—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π
              </p>
            </div>
          </div>
        </div>
      </section>

      {isModalOpen && (
        <div className={s.modalOverlay}>
          <div className={`${s.modal} ${s.modalAnimate}`}>
            <h2 className={s.modalTitle}>–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ</h2>
            <input 
              className={s.title1} 
              type="text" 
              placeholder="–ò–º—è" 
              name="name"
              value={formData.name} 
              onChange={handleChange} 
              required 
            />
            <input 
              className={s.title1} 
              type="tel" 
              placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" 
              name="phone"
              value={formData.phone} 
              onChange={handleChange} 
              required 
            />
            <input 
              className={s.title1} 
              type="email" 
              placeholder="Email" 
              name="email"
              value={formData.email} 
              onChange={handleChange} 
              required 
            />
            <div className={s.modalButtons}>
              <button className={`${s.btn2} ${s.pulseAnimation}`} onClick={() => setIsModalOpen(false)}>
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
              <button className={`${s.btn1} ${s.pulseAnimation}`} type="submit" onClick={handleSubmit}>
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default Section5;